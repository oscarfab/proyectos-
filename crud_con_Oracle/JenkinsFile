pipeline {
    agent any

    environment {
        APP_NAME         = 'crud-oracle-app'
        DOCKER_IMAGE     = "${APP_NAME}:latest"
        PROJECT_PATH     = 'crud_con_Oracle'
        CONTAINER_NAME   = 'crud-oracle-container'
        ORACLE_CONTAINER = 'oracle-jenkins'
        APP_PORT         = '8088'
        GIT_REPO         = 'https://github.com/oscarfab/proyectos-.git'
        GIT_BRANCH       = 'main'
    }

    tools {
        maven 'Maven'
        jdk 'Java'
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'üì• Descargando c√≥digo desde GitHub...'
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: "*/${GIT_BRANCH}"]],
                    userRemoteConfigs: [[url: "${GIT_REPO}"]]
                ])
            }
        }

        stage('Compilar y ejecutar pruebas unitarias') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        echo 'üß™ Ejecutando pruebas con H2 (sin Oracle)...'
                        bat 'mvn clean package'
                    }
                }
            }
            post {
                always {
                    echo 'üìä Publicando resultados de pruebas...'
                    // Aqu√≠ puedes agregar junit y jacoco si quieres publicar reportes
                }
            }
        }

        stage('Iniciar Oracle para la app') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        echo 'üóÉÔ∏è Iniciando contenedor de Oracle XE...'
                        bat "docker stop ${ORACLE_CONTAINER} || exit 0"
                        bat "docker rm ${ORACLE_CONTAINER} || exit 0"
                        bat """
                            docker run -d ^
                            --name ${ORACLE_CONTAINER} ^
                            -p 1521:1521 ^
                            -e ORACLE_PASSWORD=oracle ^
                            gvenzl/oracle-xe:21-slim
                        """
                    }
                }
            }
        }

        stage('Esperar Oracle') {
            steps {
                echo '‚è≥ Esperando a que Oracle est√© listo...'
                sleep(90)
            }
        }

        stage('Construir imagen Docker') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        echo 'üèóÔ∏è Construyendo imagen Docker...'
                        bat "docker build -t ${DOCKER_IMAGE} ."
                    }
                }
            }
        }

        stage('Ejecutar app con Oracle') {
            steps {
                script {
                    dir("${PROJECT_PATH}") {
                        echo 'üöÄ Desplegando aplicaci√≥n conectada a Oracle...'
                        bat "docker stop ${CONTAINER_NAME} || exit 0"
                        bat "docker rm ${CONTAINER_NAME} || exit 0"
                        bat """
                            docker run -d ^
                            --name ${CONTAINER_NAME} ^
                            -p ${APP_PORT}:${APP_PORT} ^
                            -e SPRING_DATASOURCE_URL=jdbc:oracle:thin:@host.docker.internal:1521/xepdb1 ^
                            -e SPRING_DATASOURCE_USERNAME=system ^
                            -e SPRING_DATASOURCE_PASSWORD=oracle ^
                            ${APP_NAME}:latest
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo 'üßπ Limpiando contenedores temporales...'
            script {
                bat "docker stop ${ORACLE_CONTAINER} || exit 0"
                bat "docker rm ${ORACLE_CONTAINER} || exit 0"
            }
        }
        success {
            echo "‚úÖ Pipeline completado con √©xito. App disponible en http://localhost:${APP_PORT}/swagger-ui.html"
        }
    }
}
