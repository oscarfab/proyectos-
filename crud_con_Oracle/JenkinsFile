stages {
    stage('Checkout') {
        steps {
            checkout scmGit(...)
        }
    }

    // ‚úÖ NO iniciamos Oracle aqu√≠

    stage('Compilar y ejecutar pruebas unitarias') {
        steps {
            script {
                dir("${PROJECT_PATH}") {
                    echo 'üß™ Ejecutando pruebas con H2 (sin Oracle)...'
                    bat 'mvn clean package'  // ‚Üê genera el JAR y pasa pruebas con H2
                }
            }
        }
        post {
            always {
                // Publicar resultados y cobertura
            }
        }
    }

    // ‚úÖ AHORA S√ç iniciamos Oracle, pero SOLO para desplegar la app real
    stage('Iniciar Oracle para la app') {
        steps {
            script {
                dir("${PROJECT_PATH}") {
                    bat "docker run -d --name ${ORACLE_CONTAINER} -p 1521:1521 -e ORACLE_PASSWORD=oracle gvenzl/oracle-xe:21-slim"
                }
            }
        }
    }

    stage('Esperar Oracle') {
        steps { sleep(90) }
    }

    stage('Construir imagen Docker') {
        steps {
            script {
                dir("${PROJECT_PATH}") {
                    bat "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }
    }

    stage('Ejecutar app con Oracle') {
        steps {
            script {
                dir("${PROJECT_PATH}") {
                    bat """
                        docker run -d ^
                        --name ${CONTAINER_NAME} ^
                        -p ${APP_PORT}:${APP_PORT} ^
                        -e SPRING_DATASOURCE_URL=jdbc:oracle:thin:@host.docker.internal:1521/xepdb1 ^
                        -e SPRING_DATASOURCE_USERNAME=system ^
                        -e SPRING_DATASOURCE_PASSWORD=oracle ^
                        ${APP_NAME}:latest
                    """
                }
            }
        }
    }
}